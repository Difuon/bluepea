{
	"version": 3,
	"file": "C:/Users/elong/AdHoc/bluepea/src/bluepea/static/pylib/__javascript__/pylib.inspector.mod.js",
	"sources": [
		"C:/Users/elong/AdHoc/bluepea/src/bluepea/static/pylib/inspector.py"
	],
	"sourcesContent": [
		"\"\"\"\nInspector page, used for viewing objects in the database.\n\"\"\"\n\n\nclass Tab:\n    \"\"\"\n    Base class of tabs, including the menu link and the displayed tab itself.\n    \"\"\"\n    Name = \"\"\n    \"\"\"Friendly name to be displayed in the menu.\"\"\"\n    Data_tab = \"\"\n    \"\"\"Tab identifier, used as html attribute 'data-tab'.\"\"\"\n    Active = False\n    \"\"\"True if this Tab should be displayed on startup.\"\"\"\n\n    def __init__(self):\n        self._menu_attrs = {\"data-tab\": self.Data_tab}\n        self._tab_attrs = {\"data-tab\": self.Data_tab}\n        self._menu = \"a.item\"\n        self._tab = \"div.ui.bottom.attached.tab.segment\"\n\n        if self.Active:\n            self._menu += \".active\"\n            self._tab += \".active\"\n\n    def menu_item(self):\n        \"\"\"\n        Returns a vnode <a> item, for use in the tab menu.\n        \"\"\"\n        return m(self._menu, self._menu_attrs, self.Name)\n\n    def tab_item(self):\n        \"\"\"\n        Returns a vnode tab wrapper around the contents of the tab itself.\n        \"\"\"\n        return m(self._tab, self._tab_attrs, self.main_view())\n\n    def main_view(self):\n        \"\"\"\n        Returns the vnode of the actual tab contents.\n        \"\"\"\n        return m(\"div\", \"hello \" + self.Name)\n\n\nclass Entities(Tab):\n    Name = \"Entities\"\n    Data_tab = \"entities\"\n    Active = True\n\n    _view = {\n        \"view\": lambda: m(\"div\", \"hello Entities\")\n    }\n\n    def main_view(self):\n        return m(self._view)\n\n\nclass Issuants(Tab):\n    Name = \"Issuants\"\n    Data_tab = \"issuants\"\n\n\nclass Offers(Tab):\n    Name = \"Offers\"\n    Data_tab = \"offers\"\n\n\nclass Messages(Tab):\n    Name = \"Messages\"\n    Data_tab = \"messages\"\n\n\nclass AnonMsgs(Tab):\n    Name = \"Anon Msgs\"\n    Data_tab = \"anonmsgs\"\n\n\nclass Tabs:\n    \"\"\"\n    Manages the displayed tabs.\n    \"\"\"\n    def __init__(self):\n        self.tabs = [Entities(), Issuants(), Offers(), Messages(), AnonMsgs()]\n\n        # Required to activate tab functionality (so clicking a menu item will activate that tab)\n        jQuery(document).ready(lambda: jQuery('.menu .item').tab())\n\n    def view(self):\n        menu_items = []\n        tab_items = []\n        for tab in self.tabs:\n            menu_items.append(tab.menu_item())\n            tab_items.append(tab.tab_item())\n\n        return m(\"div\",\n                 m(\"div.ui.top.attached.pointing.menu\",\n                   menu_items\n                   ),\n                 tab_items\n                 )\n\n\ntabs = Tabs()\nRenderer = {\n    \"render\": tabs.view\n}\n"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAIA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AAAA;AAEA;AAIA;AAAA;AAEA;AAIA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AADA;AAIA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AAIA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}